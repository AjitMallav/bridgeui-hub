#!/usr/bin/env node
const fs = require("fs");
const path = require("path");

function parseDotEnv(filePath) {
  try {
    const raw = fs.readFileSync(filePath, "utf8");
    const out = {};
    for (const line of raw.split(/\r?\n/)) {
      const trimmed = line.trim();
      if (!trimmed || trimmed.startsWith("#")) continue;
      const idx = trimmed.indexOf("=");
      if (idx === -1) continue;
      const key = trimmed.slice(0, idx).trim();
      let value = trimmed.slice(idx + 1).trim();
      if (
        (value.startsWith('"') && value.endsWith('"')) ||
        (value.startsWith("'") && value.endsWith("'"))
      ) {
        value = value.slice(1, -1);
      }
      out[key] = value;
    }
    return out;
  } catch (e) {
    return {};
  }
}

const repoRoot = path.resolve(__dirname, "..");
const extDir = path.resolve(repoRoot, "dynamic-display-extension");

const envFromExt = parseDotEnv(path.join(extDir, ".env"));
const envFromRoot = parseDotEnv(path.join(repoRoot, ".env"));
const env = Object.assign({}, envFromRoot, envFromExt, process.env);

const statsig = env.STATSIG_CLIENT_KEY || "";
const geminiKey = env.GEMINI_API_KEY || "";
const geminiModel = env.GEMINI_MODEL || "models/gemini-2.0-flash-exp";

const outPath = path.join(extDir, "config.js");
const banner = `// Generated by scripts/generate-extension-config.js. Do NOT commit this file.\n`;
const body = `self.__DDE_CONFIG = {\n  STATSIG_CLIENT_KEY: ${JSON.stringify(
  statsig
)},\n  GEMINI_API_KEY: ${JSON.stringify(
  geminiKey
)},\n  GEMINI_MODEL: ${JSON.stringify(geminiModel)}\n};\n`;

fs.writeFileSync(outPath, banner + body, "utf8");
console.log(`Wrote ${path.relative(repoRoot, outPath)}`);
